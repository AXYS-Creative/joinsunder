<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin - {{ meta_data.site_name }}</title>
    <!-- Favicons -->
    <link rel="icon" href="/favicon.ico" sizes="any" />

    <link
      rel="icon"
      href="/static/img/favicon-dark.svg"
      type="image/svg+xml"
      media="(prefers-color-scheme: dark)"
    />
    <link
      rel="icon"
      href="/static/img/favicon-light.svg"
      type="image/svg+xml"
      media="(prefers-color-scheme: light)"
    />
  </head>
  <body>
    <!-- Include the script that builds the page and powers Decap CMS -->
    <script src="https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js"></script>

    <!-- Netlify Identity Widget -->
    <script
      type="text/javascript"
      src="https://identity.netlify.com/v1/netlify-identity-widget.js"
    ></script>

    <!-- Admin Preview Styles -->
    <script>
      const { h, createClass } = window;

      let FooterPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          const logoSrc = data.logo_src || "/static/img/logo-squad-light.svg";
          const links = data.links || [];
          const cta = data.cta || {};

          return h(
            "footer",
            { className: "site-footer" },
            h(
              "div",
              { className: "site-footer__inner" },
              h(
                "div",
                { className: "inner-top" },
                h(
                  "a",
                  {
                    className: "logo-link footer-logo tab-element-page",
                    href: "/",
                  },
                  h("img", {
                    className: "logo-link__img footer-logo__img",
                    src: logoSrc,
                    alt: "Join Sunder logo",
                    width: "116",
                    height: "32",
                  })
                ),
                h(
                  "div",
                  { className: "social-media no-label" },
                  h(
                    "ul",
                    { className: "social-media__links" },
                    [
                      {
                        href: "https://www.tiktok.com/@join.sunder",
                        label: "Tik Tok",
                        icon: "/static/img/icon-social-tiktok.svg",
                      },
                      {
                        href: "https://www.youtube.com/@sunderenergy9101",
                        label: "YouTube",
                        icon: "/static/img/icon-social-youtube.svg",
                      },
                      {
                        href: "https://www.facebook.com/sunderenergy",
                        label: "Facebook",
                        icon: "/static/img/icon-social-facebook.svg",
                      },
                      {
                        href: "https://www.instagram.com/joinsunder/",
                        label: "Instagram",
                        icon: "/static/img/icon-social-instagram.svg",
                      },
                      {
                        href: "https://www.linkedin.com/company/sunder-energy/",
                        label: "LinkedIn",
                        icon: "/static/img/icon-social-linkedin.svg",
                      },
                    ].map((social) =>
                      h(
                        "li",
                        {},
                        h(
                          "a",
                          {
                            href: social.href,
                            target: "_blank",
                            className: "social-media__link tab-element-page",
                            "aria-label": social.label,
                          },
                          h("span", {
                            className: "social-media__link-img",
                            style: {
                              maskImage: `url(${social.icon})`,
                              WebkitMaskImage: `url(${social.icon})`,
                            },
                          })
                        )
                      )
                    )
                  )
                )
              ),
              h(
                "div",
                { className: "inner-bottom" },
                h(
                  "ul",
                  {
                    className: "footer-links",
                    "aria-label": "Footer navigation",
                  },
                  links.map((link) =>
                    h(
                      "li",
                      {},
                      h(
                        "a",
                        {
                          className:
                            "footer-links__link classic-link tab-element-page",
                          href: link.url,
                          target: link.new_tab ? "_blank" : null,
                          rel: link.new_tab ? "noopener noreferrer" : null,
                        },
                        link.title
                      )
                    )
                  )
                ),
                cta.text &&
                  h(
                    "div",
                    { className: "cta-group" },
                    h(
                      "a",
                      {
                        className: "cta-1 outline tab-element-page",
                        href: cta.url || "#",
                        target: cta.new_tab ? "_blank" : null,
                        rel: cta.new_tab ? "noopener noreferrer" : null,
                        "aria-label": cta.text,
                      },
                      cta.text,
                      h("span", { className: "sr-only" })
                    )
                  )
              )
            )
          );
        },
      });

      let HeroHomePreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          const fallbackTitle = "Welcome to Sunder Energy";
          const sectionTitle = data.section_title || fallbackTitle;

          const renderPanel = (panelData, panelClass) => {
            if (!panelData) return null;

            return h(
              "div",
              { className: `hero-panel ${panelClass}` },
              // Background image
              h("img", {
                className: "hero-panel__bg-img",
                src: panelData.bg_img,
                alt: "",
                width: "1000",
                height: "600",
                loading: "eager",
                decoding: "async",
              }),
              // Logo
              h("img", {
                className: "hero-panel__logo",
                src: panelData.logo,
                alt: "",
              }),
              // Title
              h(
                "h2",
                { className: "hero-panel__title" },
                h(
                  "span",
                  { className: "hero-panel__title-sm" },
                  panelData.pre_title
                ),
                h(
                  "span",
                  { className: "hero-panel__title-lg" },
                  panelData.title
                )
              ),
              // CTA
              panelData.cta?.text &&
                h(
                  "div",
                  { className: "cta-group" },
                  h(
                    "a",
                    {
                      className: "cta-1 tab-element-page",
                      href: panelData.cta.url || "#",
                      target: panelData.cta.new_tab ? "_blank" : null,
                      rel: panelData.cta.new_tab ? "noopener noreferrer" : null,
                      "aria-label": `Learn More about ${panelData.title}`,
                    },
                    panelData.cta.text,
                    h(
                      "span",
                      { className: "sr-only" },
                      `Learn More about ${panelData.title}`
                    )
                  )
                )
            );
          };

          return h(
            "div",
            { className: "main-home" },
            h(
              "section",
              { className: "hero" },
              h("h1", { className: "sr-only" }, sectionTitle),
              renderPanel(data.external_panel, "sunder-external"),
              renderPanel(data.internal_panel, "sunder-internal")
            )
          );
        },
      });

      let EthosPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          const sectionTitle = data.section_title;
          const images = data.section_imgs || [];
          const values = data.values || [];
          const ctaText = data.cta?.text;
          const ctaUrl = data.cta?.url;
          const ctaP = data.cta_p;

          return h(
            "section",
            { className: "section-ethos" },
            h(
              "div",
              { className: "ethos-pin deactivated" },

              // ── Top Section ─────────────────────
              h(
                "div",
                { className: "ethos-top" },
                h(
                  "h1",
                  { className: "ethos-top__title" },
                  ...sectionTitle
                    .split(" ")
                    .map((word, i) => [
                      word,
                      h("br", { "aria-hidden": "true", key: i }),
                    ])
                ),
                h(
                  "div",
                  {
                    className: "carousel-gallery carousel-gallery--ethos",
                  },
                  images.map((img, i) =>
                    h("img", {
                      className: `carousel-gallery__img join-carousel__img${
                        i === 0 ? " active" : ""
                      }`,
                      src: img.src,
                      alt: img.title || "",
                      width: "1280",
                      height: "453",
                      loading: i === 0 ? "eager" : "lazy",
                      decoding: "async",
                    })
                  )
                )
              ),

              // ── Middle Section ─────────────────
              h(
                "div",
                { className: "ethos-middle" },
                h("p", { className: "ethos-middle__p" }, data.section_desc),
                h(
                  "div",
                  { className: "ethos-middle__panels", tabIndex: "-1" },
                  values.map((val, i) =>
                    h(
                      "div",
                      {
                        className: `ethos-middle__panels-panel value-panel value-panel-${
                          i + 1
                        } gsap-animate animate`,
                      },
                      h(
                        "h2",
                        { className: "panel-title" },
                        ...val.title
                          .split(" ")
                          .map((word, i) => [
                            word,
                            h("br", { "aria-hidden": "true", key: i }),
                          ])
                      ),
                      h(
                        "p",
                        {
                          className: `panel-desc panel-desc-${i + 1}`,
                        },
                        val.caption
                      )
                    )
                  )
                )
              ),

              // ── Bottom Section ────────────────
              h(
                "div",
                { className: "ethos-bottom gsap-animate animate" },
                h("p", { className: "ethos-bottom__p" }, ctaP),
                ctaText &&
                  h(
                    "div",
                    { className: "cta-group" },
                    h(
                      "a",
                      {
                        className: "cta-1 outline tab-element-page",
                        href: ctaUrl || "#",
                        "aria-label": ctaText,
                      },
                      ctaText,
                      h("span", { className: "sr-only" })
                    )
                  )
              )
            )
          );
        },
      });

      let QuoteSectionPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();
          const quotes = data.list || [];

          return h(
            "section",
            { className: "partial-quote", id: "quote-section" },
            quotes.map((item, index) =>
              h(
                "div",
                { className: "quote", key: index },
                h(
                  "figure",
                  { className: "portrait-gradient" },
                  h("img", {
                    className: "portrait-gradient__img",
                    src: item.img_src,
                    alt: `${item.name} ${item.role}`,
                    width: "1000",
                    height: "1086",
                    loading: "lazy",
                    decoding: "async",
                  }),
                  h(
                    "figcaption",
                    {
                      className: "portrait-gradient__caption",
                      "aria-hidden": "true",
                    },
                    h(
                      "h3",
                      { className: "portrait-gradient__caption-name" },
                      item.name?.split(" ")[0],
                      h("br", { "aria-hidden": "true" }),
                      item.name?.split(" ").slice(1).join(" ")
                    ),
                    h(
                      "h4",
                      { className: "portrait-gradient__caption-role" },
                      item.role
                    )
                  )
                ),
                h(
                  "div",
                  { className: "quote__text-block" },
                  h("h2", { className: "quote__text-block-title" }, item.title),
                  h("blockquote", {}, `“${item.quote}”`)
                )
              )
            )
          );
        },
      });

      let HeroErrorPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          return h(
            "section",
            {
              className: "hero-alert",
            },
            h("h1", { className: "hero-alert__title" }, data.section_title),
            h("p", { className: "hero-alert__desc" }, data.section_desc),
            h(
              "div",
              { className: "cta-group" },
              data.cta_1?.text &&
                h(
                  "a",
                  { className: "cta-1 outline", href: data.cta_1.url || "#" },
                  data.cta_1.text
                ),
              data.cta_2?.text &&
                h(
                  "a",
                  { className: "cta-2", href: data.cta_2.url || "#" },
                  data.cta_2.text
                )
            )
          );
        },
      });

      let FormSubmitPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          return h(
            "section",
            { className: "hero-alert" },
            h("h1", { className: "hero-alert__title" }, data.section_title),
            h("p", { className: "hero-alert__desc" }, data.section_desc),
            h(
              "div",
              { className: "cta-group" },
              data.cta_1?.text &&
                h(
                  "a",
                  {
                    className: "cta-1 outline tab-element-page",
                    href: data.cta_1.url || "#",
                    "aria-label": data.cta_1.text,
                  },
                  data.cta_1.text,
                  h("span", { className: "sr-only" })
                ),
              data.cta_2?.text &&
                h(
                  "a",
                  {
                    className: "cta-2 tab-element-page",
                    href: data.cta_2.url || "#",
                    "aria-label": data.cta_2.text,
                  },
                  data.cta_2.text,
                  h("span", { className: "sr-only" })
                )
            )
          );
        },
      });

      // The key here: use the same name as your file definition in config.yml
      CMS.registerPreviewTemplate("footer", FooterPreview);
      CMS.registerPreviewTemplate("home_hero", HeroHomePreview);
      CMS.registerPreviewTemplate("ethos", EthosPreview);
      CMS.registerPreviewTemplate("quotes", QuoteSectionPreview);
      CMS.registerPreviewTemplate("hero_error", HeroErrorPreview);
      CMS.registerPreviewTemplate("form_submit", FormSubmitPreview);
      CMS.registerPreviewStyle("/static/styles/styles.css");
    </script>
  </body>
</html>
