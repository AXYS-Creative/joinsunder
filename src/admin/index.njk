<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin - {{ meta_data.site_name }}</title>
    <!-- Favicons -->
    <link rel="icon" href="/favicon.ico" sizes="any" />

    <link
      rel="icon"
      href="/static/img/favicon-dark.svg"
      type="image/svg+xml"
      media="(prefers-color-scheme: dark)"
    />
    <link
      rel="icon"
      href="/static/img/favicon-light.svg"
      type="image/svg+xml"
      media="(prefers-color-scheme: light)"
    />
  </head>
  <body>
    <!-- Include the script that builds the page and powers Decap CMS -->
    <script src="https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js"></script>

    <!-- Netlify Identity Widget -->
    <script
      type="text/javascript"
      src="https://identity.netlify.com/v1/netlify-identity-widget.js"
    ></script>

    <!-- Admin Preview Styles -->
    <script>
      const { h, createClass } = window;

      // Partials
      const ImgHeroPreview = ({
        title,
        titleTag = "h2",
        desc,
        bg,
        graphic,
        cta,
        sectionClass = "",
      }) => {
        const TitleTag = titleTag;

        return h(
          "section",
          { className: `partial-img-hero ${sectionClass}` },
          h(
            "div",
            { className: "partial-img-hero__inner" },

            bg &&
              h("img", {
                className: "partial-img-hero__bg",
                src: bg,
                alt: "",
              }),

            graphic &&
              h("img", {
                className: "partial-img-hero__graphic",
                src: graphic,
                alt: "",
              }),

            title &&
              h(
                TitleTag,
                { className: `partial-img-hero__${titleTag}` },
                title
              ),

            h(
              "div",
              { className: "partial-img-hero__footer" },
              h("p", { className: "partial-img-hero__p" }, desc),
              cta?.text &&
                h(
                  "div",
                  { className: "cta-group" },
                  h(
                    "a",
                    {
                      className: "cta-1 tab-element-page",
                      href: cta.url || "#",
                      "aria-label": cta.text,
                    },
                    cta.text,
                    h("span", { className: "sr-only" })
                  )
                )
            )
          )
        );
      };

      const LogosGroupPreview = ({
        id,
        title,
        desc,
        logos = [],
        grid = 3,
        gridSm = 2,
      }) => {
        return h(
          "div",
          { className: "logos-group", id },

          // Title + Description
          h("h2", { className: "logos-group__h2" }, title),
          h("p", { className: "logos-group__p" }, desc),

          // Logo Grid
          h(
            "div",
            {
              className: `logos-group__imgs grid-${grid} grid-sm-${gridSm}`,
            },
            logos.map((logo, i) =>
              h("img", {
                key: i,
                className: "",
                src: logo.src,
                alt: logo.title,
              })
            )
          )
        );
      };

      // Section Previews
      let FooterPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          const logoSrc = data.logo_src;
          const showSocial = data.show_social;
          const links = data.links || [];
          const cta = data.cta || {};

          return h(
            "footer",
            { className: "site-footer" },
            h(
              "div",
              { className: "site-footer__inner" },
              h(
                "div",
                { className: "inner-top" },
                h(
                  "a",
                  {
                    className: "logo-link footer-logo tab-element-page",
                    href: "/",
                  },
                  h("img", {
                    className: "logo-link__img footer-logo__img",
                    src: logoSrc,
                    alt: "Join Sunder logo",
                  })
                ),
                showSocial &&
                  h(
                    "div",
                    { className: "social-media no-label" },
                    h(
                      "ul",
                      { className: "social-media__links" },
                      [
                        {
                          href: "https://www.tiktok.com/@join.sunder",
                          label: "Tik Tok",
                          icon: "/static/img/icon-social-tiktok.svg",
                        },
                        {
                          href: "https://www.youtube.com/@sunderenergy9101",
                          label: "YouTube",
                          icon: "/static/img/icon-social-youtube.svg",
                        },
                        {
                          href: "https://www.facebook.com/sunderenergy",
                          label: "Facebook",
                          icon: "/static/img/icon-social-facebook.svg",
                        },
                        {
                          href: "https://www.instagram.com/joinsunder/",
                          label: "Instagram",
                          icon: "/static/img/icon-social-instagram.svg",
                        },
                        {
                          href: "https://www.linkedin.com/company/sunder-energy/",
                          label: "LinkedIn",
                          icon: "/static/img/icon-social-linkedin.svg",
                        },
                      ].map((social) =>
                        h(
                          "li",
                          {},
                          h(
                            "a",
                            {
                              href: social.href,
                              target: "_blank",
                              className: "social-media__link tab-element-page",
                              "aria-label": social.label,
                            },
                            h("span", {
                              className: "social-media__link-img",
                              style: {
                                maskImage: `url(${social.icon})`,
                                WebkitMaskImage: `url(${social.icon})`,
                              },
                            })
                          )
                        )
                      )
                    )
                  )
              ),
              h(
                "div",
                { className: "inner-bottom" },
                h(
                  "ul",
                  {
                    className: "footer-links",
                    "aria-label": "Footer navigation",
                  },
                  links.map((link) =>
                    h(
                      "li",
                      {},
                      h(
                        "a",
                        {
                          className:
                            "footer-links__link classic-link tab-element-page",
                          href: link.url,
                          target: link.new_tab ? "_blank" : null,
                          rel: link.new_tab ? "noopener noreferrer" : null,
                        },
                        link.title
                      )
                    )
                  )
                ),
                cta.text &&
                  h(
                    "div",
                    { className: "cta-group" },
                    h(
                      "a",
                      {
                        className: "cta-1 outline tab-element-page",
                        href: cta.url || "#",
                        target: cta.new_tab ? "_blank" : null,
                        rel: cta.new_tab ? "noopener noreferrer" : null,
                        "aria-label": cta.text,
                      },
                      cta.text,
                      h("span", { className: "sr-only" })
                    )
                  )
              )
            )
          );
        },
      });

      let HeroHomePreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          const fallbackTitle = "Welcome to Sunder Energy";
          const sectionTitle = data.section_title || fallbackTitle;

          const renderPanel = (panelData, panelClass) => {
            if (!panelData) return null;

            return h(
              "div",
              { className: `hero-panel ${panelClass}` },
              // Background image
              h("img", {
                className: "hero-panel__bg-img",
                src: panelData.bg_img,
                alt: "",
                decoding: "async",
              }),
              // Logo
              h("img", {
                className: "hero-panel__logo",
                src: panelData.logo,
                alt: "",
              }),
              h(
                "div",
                { className: "hero-panel__text" },
                // Title
                h(
                  "h2",
                  { className: "hero-panel__title" },
                  h(
                    "span",
                    { className: "hero-panel__title-sm" },
                    panelData.pre_title
                  ),
                  h(
                    "span",
                    { className: "hero-panel__title-lg" },
                    panelData.title
                  )
                ),
                // CTA
                panelData.cta?.text &&
                  h(
                    "div",
                    { className: "cta-group" },
                    h(
                      "a",
                      {
                        className: "cta-1 tab-element-page",
                        href: panelData.cta.url || "#",
                        target: panelData.cta.new_tab ? "_blank" : null,
                        rel: panelData.cta.new_tab
                          ? "noopener noreferrer"
                          : null,
                        "aria-label": `Learn More about ${panelData.title}`,
                      },
                      panelData.cta.text,
                      h(
                        "span",
                        { className: "sr-only" },
                        `Learn More about ${panelData.title}`
                      )
                    )
                  )
              )
            );
          };

          return h(
            "div",
            { className: "main-home" },
            h(
              "section",
              { className: "hero" },
              h("h1", { className: "sr-only" }, sectionTitle),
              renderPanel(data.external_panel, "sunder-external"),
              renderPanel(data.internal_panel, "sunder-internal")
            )
          );
        },
      });

      let EthosPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          const sectionTitle = data.section_title;
          const images = data.section_imgs || [];
          const values = data.values || [];
          const ctaText = data.cta?.text;
          const ctaUrl = data.cta?.url;
          const ctaP = data.cta_p;

          return h(
            "section",
            { className: "section-ethos" },
            h(
              "div",
              { className: "ethos-pin deactivated" },

              // ── Top Section ─────────────────────
              h(
                "div",
                { className: "ethos-top" },
                h(
                  "h1",
                  { className: "ethos-top__title" },
                  ...sectionTitle
                    .split(" ")
                    .map((word, i) => [
                      word,
                      h("br", { "aria-hidden": "true", key: i }),
                    ])
                ),
                h(
                  "div",
                  {
                    className: "carousel-gallery carousel-gallery--ethos",
                  },
                  images.map((img, i) =>
                    h("img", {
                      className: `carousel-gallery__img join-carousel__img${
                        i === 0 ? " active" : ""
                      }`,
                      src: img.src,
                      alt: img.title || "",
                      decoding: "async",
                    })
                  )
                )
              ),

              // ── Middle Section ─────────────────
              h(
                "div",
                { className: "ethos-middle" },
                h("p", { className: "ethos-middle__p" }, data.section_desc),
                h(
                  "div",
                  { className: "ethos-middle__panels", tabIndex: "-1" },
                  values.map((val, i) =>
                    h(
                      "div",
                      {
                        className: `ethos-middle__panels-panel value-panel value-panel-${
                          i + 1
                        } gsap-animate animate`,
                      },
                      h(
                        "h2",
                        { className: "panel-title" },
                        ...val.title
                          .split(" ")
                          .map((word, i) => [
                            word,
                            h("br", { "aria-hidden": "true", key: i }),
                          ])
                      ),
                      h(
                        "p",
                        {
                          className: `panel-desc panel-desc-${i + 1}`,
                        },
                        val.caption
                      )
                    )
                  )
                )
              ),

              // ── Bottom Section ────────────────
              h(
                "div",
                { className: "ethos-bottom gsap-animate animate" },
                h("p", { className: "ethos-bottom__p" }, ctaP),
                ctaText &&
                  h(
                    "div",
                    { className: "cta-group" },
                    h(
                      "a",
                      {
                        className: "cta-1 outline tab-element-page",
                        href: ctaUrl || "#",
                        "aria-label": ctaText,
                      },
                      ctaText,
                      h("span", { className: "sr-only" })
                    )
                  )
              )
            )
          );
        },
      });

      let CompetitionsPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          const types = data.types || [];
          const merch = data.yog_merch || [];
          const yogTypes = data.yog_types || [];
          const yogLogo = data.yog_logo;

          return h(
            "section",
            {
              className: "section-competitions section-gradient",
              id: "competitions",
            },

            // Title + Description
            h(
              "h2",
              { className: "section-gradient__title" },
              data.section_title
            ),
            h("p", { className: "section-gradient__desc" }, data.section_desc),

            // Competition Types
            h(
              "div",
              { className: "competition-types" },
              types.map((type, i) =>
                h(
                  "figure",
                  { className: "competition-types__figure", key: i },
                  h("img", {
                    className: "competition-types__img",
                    src: type.src,
                    alt: "",
                  }),
                  h(
                    "figcaption",
                    { className: "competition-types__caption" },
                    h(
                      "h3",
                      { className: "competition-types__caption-title" },
                      type.title
                    ),
                    h(
                      "p",
                      { className: "competition-types__caption-p" },
                      type.caption
                    )
                  ),
                  h(
                    "span",
                    { className: "cta-1 competition-types__badge" },
                    "Read More"
                  )
                )
              )
            ),

            // Year of Gear
            h(
              "div",
              { className: "yog" },

              // Logo
              yogLogo &&
                h(
                  "figure",
                  { className: "yog-logo" },
                  h("img", {
                    className: "yog-logo__img",
                    src: yogLogo,
                    alt: "Year of Gear",
                  })
                ),

              // Merch Rows
              h(
                "div",
                { className: "yog-merch" },
                merch.map((row, i) =>
                  h(
                    "div",
                    { className: "yog-merch__row", key: i },
                    row.items?.map((item, j) =>
                      h("img", {
                        className: `yog-merch__row-img gsap-animate ${
                          item.rotate || ""
                        }`,
                        style: {
                          opacity: 1,
                        },
                        src: item.src,
                        alt: item.title,
                        key: j,
                      })
                    )
                  )
                )
              ),

              // Yog Types
              h(
                "div",
                { className: "yog-types" },
                yogTypes.map((type, i) =>
                  h("img", {
                    className: "yog-types__img",
                    src: type.src,
                    alt: type.title,
                    key: i,
                  })
                )
              ),

              // Stripe element
              h(
                "div",
                { className: "yog-stripes" },
                h("div", { className: "yog-stripes__stripe" })
              )
            )
          );
        },
      });

      let ExperiencesPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          const videos = data.videos || [];
          const collage = data.collage || {};
          // Handles both desktop and mobile, with opt-in for alternating mode
          const renderImage = (
            img,
            imgIndex,
            colIndex,
            alternateByCol = false
          ) => {
            const isPortrait = alternateByCol
              ? colIndex % 2 === 0 // col 0 and 2 → portrait first
                ? imgIndex % 2 === 0
                : imgIndex % 2 !== 0
              : imgIndex % 2 !== 0; // original mobile logic

            return h("img", {
              className: isPortrait ? "portrait" : "landscape",
              src: img.src,
              alt: img.title,
            });
          };

          return h(
            "section",
            {
              className: "section-experiences section-gradient",
              id: "experiences",
            },

            // Title + Description
            h(
              "h2",
              {
                className: "section-gradient__title section-experiences__title",
              },
              data.section_title
            ),
            h(
              "p",
              { className: "section-gradient__desc section-experiences__desc" },
              data.section_desc
            ),

            // ─── Simulated Swiper Carousel ───
            h(
              "div",
              {
                className: "swiper mySwiper video-carousel",
              },
              h(
                "div",
                {
                  className: "swiper-wrapper",
                  style: {
                    display: "flex",
                    gap: "12px",
                    overflow: "auto",
                  },
                },
                videos.map((vid, i) =>
                  h(
                    "button",
                    {
                      className: "video-toggle swiper-slide tab-element-page",
                      style: {
                        minWidth: "400px",
                      },
                      "data-src": vid.src,
                      "aria-label": `Play video: ${vid.title}`,
                      key: i,
                    },
                    h("span", { className: "badge cta-1" }, "Play Video"),
                    h("img", {
                      src: vid.poster,
                      alt: vid.title,
                    })
                  )
                )
              )
            ),

            // ─── Collage (optional) ───
            data.toggle_collage &&
              h(
                "div",
                { className: "collage" },
                ["column_1", "column_2", "column_3", "column_4"].map(
                  (colKey, colIndex) =>
                    h(
                      "div",
                      {
                        className: `collage__column collage__column-${
                          colIndex + 1
                        }`,
                      },
                      (collage[colKey] || []).map(
                        (img, imgIndex) =>
                          renderImage(img, imgIndex, colIndex, true) // ← alternateByCol = true
                      )
                    )
                ),
                ["column_1_mobile", "column_2_mobile"].map((colKey, colIndex) =>
                  h(
                    "div",
                    {
                      className: `collage__column collage__column-mobile collage__column-mobile-${
                        colIndex + 1
                      }`,
                    },
                    (collage[colKey] || []).map(
                      (img, imgIndex) =>
                        renderImage(img, imgIndex, colIndex, false) // ← standard alt logic
                    )
                  )
                )
              )
          );
        },
      });

      let OssPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();
          return ImgHeroPreview({
            title: data.section_title,
            desc: data.section_desc,
            bg: data.section_bg,
            graphic: data.graphic,
            cta: data.cta,
            sectionClass: "oss-section",
          });
        },
      });

      let QuoteSectionPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();
          const quotes = data.list || [];

          return h(
            "section",
            { className: "partial-quote", id: "quote-section" },
            quotes.map((item, index) =>
              h(
                "div",
                { className: "quote", key: index },
                h(
                  "figure",
                  { className: "portrait-gradient" },
                  h("img", {
                    className: "portrait-gradient__img",
                    src: item.img_src,
                    alt: `${item.name} ${item.role}`,
                    decoding: "async",
                  }),
                  h(
                    "figcaption",
                    {
                      className: "portrait-gradient__caption",
                      "aria-hidden": "true",
                    },
                    h(
                      "h3",
                      { className: "portrait-gradient__caption-name" },
                      item.name?.split(" ")[0],
                      h("br", { "aria-hidden": "true" }),
                      item.name?.split(" ").slice(1).join(" ")
                    ),
                    h(
                      "h4",
                      { className: "portrait-gradient__caption-role" },
                      item.role
                    )
                  )
                ),
                h(
                  "div",
                  { className: "quote__text-block" },
                  h("h2", { className: "quote__text-block-title" }, item.title),
                  h("blockquote", {}, `“${item.quote}”`)
                )
              )
            )
          );
        },
      });

      let PlatformHeroPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();

          return ImgHeroPreview({
            title: data.section_title,
            titleTag: "h1", // ← since the platform page uses section_h1
            desc: data.section_desc,
            bg: data.section_bg,
            cta: data.cta,
            sectionClass: "platform-hero",
          });
        },
      });

      let InstallersPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();

          return LogosGroupPreview({
            id: "installers",
            title: data.section_title,
            desc: data.section_desc,
            logos: data.img_list,
            grid: data.logo_grid,
            gridSm: data.logo_grid_sm,
          });
        },
      });

      let FinanciersPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();

          return LogosGroupPreview({
            id: "financiers",
            title: data.section_title,
            desc: data.section_desc,
            logos: data.img_list,
            grid: data.logo_grid,
            gridSm: data.logo_grid_sm,
          });
        },
      });

      let ToolsPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();
          const tools = data.list || [];

          return h(
            "section",
            { className: "section-tools", id: "platform-tools" },

            // Hidden H2 for a11y/SEO (optional)
            h(
              "h2",
              { className: "sr-only" },
              data.section_title || "Sunder Tools"
            ),

            // Loop over tools and render ImgHeroPreview for each
            ...tools.map((tool, i) =>
              ImgHeroPreview({
                key: i,
                title: "", // No visible title on these, per design
                desc: tool.section_desc,
                bg: tool.section_bg,
                graphic: tool.graphic,
                cta: tool.cta,
                sectionClass: `${tool.class || ""} tools stack-section`,
              })
            )
          );
        },
      });

      let CoreValuesPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();

          return h(
            "section",
            { className: "section-values section-gradient" },

            // Text Block
            h(
              "div",
              { className: "section-values__text" },
              h("h1", {}, data.section_title),
              h(
                "p",
                {
                  className: "section-values__text-desc section-gradient__desc",
                },
                data.section_desc
              ),
              data.cta?.text &&
                h(
                  "div",
                  { className: "cta-group" },
                  h(
                    "a",
                    {
                      className: "cta-1 outline tab-element-page",
                      href: data.cta.url || "#",
                      "aria-label": data.cta.text,
                    },
                    data.cta.text,
                    h("span", { className: "sr-only" })
                  )
                )
            ),

            // Static Image — Non CMS for gsap animation
            h("img", {
              className: "section-values__figure",
              src: "/static/img/icons/About-Hero-1CoreValues.svg",
              alt: "",
            })
          );
        },
      });

      let MissionPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();
          const titleLines = data.title || [];

          return h(
            "section",
            { className: "section-mission", id: "mission" },
            h(
              "div",
              { className: "mission-pin" },
              h(
                "h2",
                { className: "mission-title" },
                titleLines.map((item, i) =>
                  h(
                    "span",
                    {
                      className: `mission-title__line ${item.style || ""}`,
                      key: i,
                    },
                    item.text
                  )
                )
              )
            )
          );
        },
      });

      let LeadershipPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();
          const portraits = data.list || [];

          return h(
            "section",
            {
              className: "section-leadership section-gradient",
              id: "leadership",
            },
            h(
              "h2",
              { className: "section-gradient__title" },
              data.section_title
            ),
            h("p", { className: "section-gradient__desc" }, data.section_desc),
            h(
              "div",
              { className: "leadership-portraits" },
              portraits.map((person, i) =>
                h(
                  "figure",
                  {
                    className: `portrait-gradient gsap-animate`, // big-three class skipped per your note
                    key: i,
                  },
                  h("img", {
                    className: "portrait-gradient__img",
                    src: person.src,
                    alt: `${person.name} ${person.role}`,
                  }),
                  h(
                    "figcaption",
                    {
                      className: "portrait-gradient__caption",
                      "aria-hidden": "true",
                    },
                    h(
                      "h3",
                      { className: "portrait-gradient__caption-name" },
                      person.name
                    ),
                    h(
                      "h4",
                      { className: "portrait-gradient__caption-role" },
                      person.role
                    )
                  )
                )
              )
            )
          );
        },
      });

      let TimelinePreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();
          const events = data.events || [];

          return h(
            "section",
            { className: "section-timeline section-gradient", id: "timeline" },
            h(
              "div",
              { className: "timeline-pin" },

              // Title & Description
              h(
                "h2",
                {
                  className: "section-timeline__title section-gradient__title",
                },
                data.section_title
              ),
              h(
                "p",
                { className: "section-timeline__desc section-gradient__desc" },
                data.section_desc
              ),

              // Timeline Events
              h(
                "div",
                { className: "timeline" },
                events.map((event, i) =>
                  h(
                    "div",
                    {
                      className: `timeline__event timeline__event-${i + 1}${
                        i === events.length - 1 ? " timeline__event-last" : ""
                      }`,
                      key: i,
                    },
                    h("h3", { className: "timeline__event-year" }, event.year),
                    h("div", { className: "timeline__event-circle" }),
                    h("p", { className: "timeline__event-desc" }, event.desc)
                  )
                ),
                h("div", {
                  className: "timeline__bar",
                  style: { width: "100%" },
                })
              )
            )
          );
        },
      });

      let JoinHeroPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();
          const images = data.imgs || [];
          const form = data.form_data || {};

          return h(
            "div",
            { className: "main-join" },
            h(
              "section",
              { className: "hero" },

              // ─── Carousel Gallery ───
              h(
                "div",
                {
                  className: "carousel-gallery carousel-gallery--join",
                },
                images.map((img, i) =>
                  h("img", {
                    className: "carousel-gallery__img join-carousel__img",
                    style: {
                      opacity: 1,
                    },
                    src: img.src,
                    alt: img.title,
                    key: i,
                  })
                )
              ),

              // ─── Form Panel ───
              // ─── Form Panel ───
              h(
                "div",
                { className: "form-panel" },

                // ✅ Section title
                h("h1", { className: "form-panel__title" }, data.section_title),

                // ✅ Form
                h(
                  "form",
                  { className: "form-redirect" },

                  // First + Last Name
                  h(
                    "div",
                    {
                      className: "form-block-group form-block-group--full-name",
                    },
                    [
                      h(
                        "div",
                        { className: "form-block form-block--first-name" },
                        [
                          h("input", {
                            className: "input",
                            placeholder: "",
                            required: true,
                          }),
                          h("label", { className: "label" }, "First Name"),
                        ]
                      ),
                      h(
                        "div",
                        { className: "form-block form-block--last-name" },
                        [
                          h("input", {
                            className: "input",
                            placeholder: "",
                            required: true,
                          }),
                          h("label", { className: "label" }, "Last Name"),
                        ]
                      ),
                    ]
                  ),

                  // Email + Phone
                  h(
                    "div",
                    {
                      className:
                        "form-block-group form-block-group--email-phone",
                    },
                    [
                      h("div", { className: "form-block form-block--email" }, [
                        h("input", {
                          className: "input",
                          type: "email",
                          placeholder: "",
                          required: true,
                        }),
                        h("label", { className: "label" }, "Email"),
                      ]),
                      h("div", { className: "form-block form-block--phone" }, [
                        h("input", {
                          className: "input",
                          type: "tel",
                          placeholder: "",
                          required: true,
                        }),
                        h("label", { className: "label" }, "Phone"),
                      ]),
                    ]
                  ),

                  // City
                  h("div", { className: "form-block form-block--city" }, [
                    h("input", {
                      className: "input",
                      placeholder: "",
                      required: true,
                    }),
                    h("label", { className: "label" }, "City"),
                  ]),

                  // State + Zip
                  h(
                    "div",
                    {
                      className: "form-block-group form-block-group--state-zip",
                    },
                    [
                      h("div", { className: "form-block form-block--state" }, [
                        h("input", {
                          className: "input",
                          placeholder: "",
                          required: true,
                        }),
                        h("label", { className: "label" }, "State"),
                      ]),
                      h("div", { className: "form-block form-block--zip" }, [
                        h("input", {
                          className: "input",
                          placeholder: "",
                          required: true,
                        }),
                        h("label", { className: "label" }, "Zip"),
                      ]),
                    ]
                  ),

                  // Optional: Discovery Field
                  form.show_field_discovery &&
                    h(
                      "div",
                      { className: "form-block form-block--discovery" },
                      [
                        h("textarea", {
                          className: "input input--textarea",
                          placeholder: "",
                          required: true,
                          maxLength: form.max_count_discovery || 250,
                        }),
                        h(
                          "label",
                          { className: "label label--textarea" },
                          form.label_discovery
                        ),
                      ]
                    ),

                  // Optional: Awareness Checkbox
                  form.show_checkbox_awareness &&
                    h(
                      "div",
                      { className: "form-block form-block--awareness" },
                      [
                        h("input", {
                          type: "checkbox",
                          className: "checkbox",
                          required: true,
                        }),
                        h(
                          "label",
                          { className: "checkbox-label" },
                          form.label_checkbox_awareness ||
                            "I understand this is a sales position."
                        ),
                      ]
                    ),

                  // Optional: reCAPTCHA
                  form.show_recaptcha &&
                    h(
                      "div",
                      {
                        className: "recaptcha",
                        style: {
                          width: "304px",
                          height: "78px",
                          background: "#f2f2f2",
                          border: "1px solid #ccc",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          fontSize: "12px",
                          color: "#555",
                          marginTop: "12px",
                        },
                      },
                      "reCAPTCHA placeholder"
                    ),

                  // Submit
                  h("div", { className: "form-footer" }, [
                    h(
                      "button",
                      { className: "cta-1 outline", type: "submit" },
                      form.submit_btn_text || "Submit"
                    ),
                  ])
                )
              )
            )
          );
        },
      });

      let HeroOSSPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();
          const cta = data.cta || {};

          return h(
            "section",
            { className: "partial-img-hero oss-page has-subcontent" },

            // Background image
            h("div", { className: "partial-img-hero__inner" }, [
              h("img", {
                className: "partial-img-hero__bg",
                src: data.section_bg,
                alt: "",
              }),

              // Title (h1) — this version uses h1 for the hero
              h(
                "h1",
                { className: "partial-img-hero__h1" },
                data.section_title
              ),

              // Footer
              h("div", { className: "partial-img-hero__footer" }, [
                h("p", { className: "partial-img-hero__p" }, data.section_desc),
                h("div", { className: "cta-group" }, [
                  cta?.text &&
                    h(
                      "a",
                      {
                        className: "cta-1 tab-element-page",
                        href: cta.url || "#",
                        "aria-label": cta.text,
                      },
                      cta.text,
                      h("span", { className: "sr-only" })
                    ),
                ]),
              ]),
            ]),

            // Optional sub-content block for OSS hero
            h("div", { className: "partial-img-hero__sub-content" }, [
              h("p", { className: "sub-content__p" }, data.section_desc),
              h("div", { className: "cta-group" }, [
                cta?.text &&
                  h(
                    "a",
                    {
                      className: "cta-1 outline tab-element-page",
                      href: cta.url || "#",
                      "aria-label": cta.text,
                    },
                    cta.text,
                    h("span", { className: "sr-only" })
                  ),
              ]),
            ])
          );
        },
      });

      let OSSHistoryPreview = createClass({
        render: function () {
          const data = this.props.entry.getIn(["data"]).toJS();
          const events = data.events || [];

          return h(
            "section",
            {
              className: "section-oss-history section-gradient",
              id: "history",
            },

            // Title + Description
            h(
              "h2",
              {
                className: "section-gradient__title section-oss-history__title",
              },
              data.section_title
            ),
            h(
              "p",
              { className: "section-gradient__desc section-oss-history__desc" },
              data.section_desc
            ),

            // Loop through service events
            h(
              "div",
              { className: "section-oss-history__events" },
              events.map((item, i) => {
                const gallery = item.gallery || [];
                const cta = item.cta || {};

                return h("div", { className: "service-event", key: i }, [
                  // Graphic
                  h("img", {
                    className: "service-event__graphic",
                    src: item.graphic,
                    alt: "",
                  }),

                  // Content block
                  h("div", { className: "service-event__content" }, [
                    h("h3", { className: "service-event__year" }, item.year),
                    h("h4", { className: "service-event__location" }, [
                      item.city &&
                        h(
                          "span",
                          { className: "service-event__location-city" },
                          `${item.city}, `
                        ),
                      h(
                        "span",
                        { className: "service-event__location-country" },
                        item.country
                      ),
                    ]),
                    item.desc &&
                      h("p", { className: "service-event__desc" }, item.desc),

                    // Image Gallery Carousel (Simulated as horizontal scroll)
                    gallery.length > 0 &&
                      h(
                        "div",
                        {
                          className: "swiper mySwiper img-carousel",
                          style: {
                            display: "flex",
                            gap: "12px",
                            overflowX: "auto",
                            padding: "12px 0",
                            marginTop: "12px",
                          },
                        },
                        gallery.map((img, index) =>
                          h(
                            "div",
                            {
                              className: "swiper-slide",
                              key: index,
                            },
                            [
                              h("img", {
                                src: img.src,
                                alt: img.title,
                              }),
                            ]
                          )
                        )
                      ),

                    // CTA (if no gallery or standalone)
                    cta?.text &&
                      h("div", { className: "cta-group" }, [
                        h(
                          gallery.length > 0 ? "button" : "a",
                          {
                            className: "cta-1 outline tab-element-page",
                            href: cta.url || "#",
                            "aria-label": cta.text,
                            target: cta.new_tab ? "_blank" : "_self",
                            rel: cta.new_tab
                              ? "noopener noreferrer"
                              : undefined,
                          },
                          cta.text,
                          h("span", { className: "sr-only" })
                        ),
                      ]),
                  ]),
                ]);
              })
            )
          );
        },
      });

      let HeroAlertPreview = createClass({
        render: function () {
          const entry = this.props.entry;
          const data = entry.getIn(["data"]).toJS();

          return h(
            "section",
            {
              className: "hero-alert",
            },
            h("h1", { className: "hero-alert__title" }, data.section_title),
            h("p", { className: "hero-alert__desc" }, data.section_desc),
            h(
              "div",
              { className: "cta-group" },
              data.cta_1?.text &&
                h(
                  "a",
                  { className: "cta-1 outline", href: data.cta_1.url || "#" },
                  data.cta_1.text
                ),
              data.cta_2?.text &&
                h(
                  "a",
                  { className: "cta-2", href: data.cta_2.url || "#" },
                  data.cta_2.text
                )
            )
          );
        },
      });

      // Use the same name as your file definition in config.yml
      CMS.registerPreviewTemplate("footer", FooterPreview);
      CMS.registerPreviewTemplate("hero_home", HeroHomePreview);
      CMS.registerPreviewTemplate("ethos", EthosPreview);
      CMS.registerPreviewTemplate("competitions", CompetitionsPreview);
      CMS.registerPreviewTemplate("experiences", ExperiencesPreview);
      CMS.registerPreviewTemplate("oss", OssPreview);
      CMS.registerPreviewTemplate("quotes", QuoteSectionPreview);
      CMS.registerPreviewTemplate("hero_platform", PlatformHeroPreview);
      CMS.registerPreviewTemplate("installers", InstallersPreview);
      CMS.registerPreviewTemplate("financiers", FinanciersPreview);
      CMS.registerPreviewTemplate("tools", ToolsPreview);
      CMS.registerPreviewTemplate("values", CoreValuesPreview);
      CMS.registerPreviewTemplate("mission", MissionPreview);
      CMS.registerPreviewTemplate("leadership", LeadershipPreview);
      CMS.registerPreviewTemplate("timeline", TimelinePreview);
      CMS.registerPreviewTemplate("hero_join", JoinHeroPreview);
      CMS.registerPreviewTemplate("hero_oss", HeroOSSPreview);
      CMS.registerPreviewTemplate("history", OSSHistoryPreview);
      CMS.registerPreviewTemplate("hero_error", HeroAlertPreview);
      CMS.registerPreviewTemplate("form_submit", HeroAlertPreview);
      CMS.registerPreviewStyle("/static/styles/styles.css");
    </script>
  </body>
</html>
